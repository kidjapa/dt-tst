package main

import (
	"dt-tst/api/balance"
	"dt-tst/api/event"
	"dt-tst/api/reset"
	"dt-tst/config"
	_ "dt-tst/docs" // docs is generated by Swag CLI, you have to import it.
	"dt-tst/handler"
	"dt-tst/router"
	"dt-tst/utils/mock_data"
	"fmt"
	echoSwagger "github.com/swaggo/echo-swagger" // echo-swagger middleware
	"strconv"
)

// @title rest-api-balance-event
// @version 1.0
// @description rest-api-balance-event Author: Bruno Luiz Katzjarowski
// @title rest-api-balance-event

// @host localhost:9090
// @BasePath /

// @schemes http https
// @produce	application/json
// @consumes application/json

// @securityDefinitions.basic BasicAuth
// @in header
// @name Authorization
func main() {

	e := router.New() // return a new instance of echo
	e.GET("/swagger/*", echoSwagger.WrapHandler) // add swagger instance

	// Create "v1" group
	v1 := e.Group("/")

	mockDataHandler, err := mock_data.NewMockData(mock_data.WithFilePathName("utils/mock_data/mock_data.json"))
	if err != nil {
		panic(err)
	}

	// create event handler
	eh := event.NewHandler(mockDataHandler)
	// create balance handler
	bh := balance.NewHandler(mockDataHandler)
	// create reset handler
	r := reset.NewHandler(mockDataHandler)

	h := handler.NewHandler(eh, bh, r)
	h.Register(v1)

	printSwaggerMessage()
	e.Logger.Fatal(e.Start(":" + strconv.FormatInt(config.GetPortEnv(), 10)))
}

func printSwaggerMessage() {
	fmt.Println(`================================================================
Access swagger documentation in http://localhost:9090/swagger/index.html
================================================================`)
}